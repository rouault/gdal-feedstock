{% set version = "3.10.0" %}

package:
  name: libgdal-core
  version: {{ version }}

source:
  # FIXME: remove beta1
  url: http://download.osgeo.org/gdal/{{ version }}/gdal-{{ version }}beta1.tar.xz
  sha256: 0cffa5aa458e9de7483e6d20dbb7ee2a570c5a9830ffd5285c285ce0fd835350

build:
  number: 0
  skip_compile_pyc:
    - share/bash-completion/completions/*.py
  ignore_run_exports_from:
    - kealib
    - openjpeg
    - tiledb
    - libnetcdf
  run_exports:
    # no idea, going with minor pin
    - {{ pin_subpackage('libgdal-core', max_pin='x.x') }}

requirements:
  build:
    - cmake
    - pkg-config >=0.21  # [not win]
    - make  # [not win]
    - ninja  # [win]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - swig
  host:
    - blosc
    - expat
    - geos
    - geotiff
    - giflib  # [not win]
    - libjpeg-turbo
    - json-c  # [not win]
    - lerc
    - libarchive
    - libcurl
    - libdeflate
    - libiconv
    - libkml-devel
    - libpng
    - libspatialite
    - libtiff
    - libuuid  # [linux]
    - libwebp-base
    - libxml2
    - lz4-c
    - openssl
    - pcre2
    - proj
    # qhull disabled because of https://github.com/conda-forge/qgis-feedstock/issues/284#issuecomment-1356490896
    # - qhull
    - setuptools
    - sqlite
    - xerces-c
    - xz
    - zlib
    - zstd
    # For these plugins, we need the headers for the core sources
    - kealib
    - openjpeg
    - tiledb
    - libnetcdf
    - libheif
  run_constrained:
    - libgdal {{ version }}.*

test:
  files:
    - test_data
    - run_test.bat
    - run_test.sh

outputs:
  - name: libgdal-core

  - name: libgdal-arrow-parquet
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - expat
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - libarrow
        - libarrow-dataset  # [libarrow != 13]
        - libparquet        # [libarrow != 13]
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/ogr_Arrow${SHLIB_EXT}        # [unix]
        - test -f ${PREFIX}/lib/gdalplugins/ogr_Parquet${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\ogr_Arrow.dll exit 1    # [win]
        - if not exist %LIBRARY_LIB%\gdalplugins\ogr_Parquet.dll exit 1  # [win]
        - gdalinfo --format Arrow
        - gdalinfo --format Parquet
    about:
      summary: Arrow and Parquet drivers for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-jp2openjpeg
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=JP2OpenJPEG
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_OPENJPEG=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - openjpeg
        - expat
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver JP2OpenJPEG for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-pdf
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=PDF
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_POPPLER=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - poppler
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
        - poppler
    test:
      files:
        - test_data
        - test_pdf.bat
        - test_pdf.sh
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
        - ./test_pdf.sh  # [unix]
        - test_pdf.bat  # [win]
    about:
      summary: Raster driver PDF for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-postgisraster
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=PostGISRaster
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_POSTGRESQL=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - libpq
        - postgresql
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
        - postgresql
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver PostGIS for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-pg
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=PG
        - GDAL_PLUGIN_TYPE=ogr
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_POSTGRESQL=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - libpq
        - postgresql
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
        - postgresql
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
    about:
      summary: Vector driver PG for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-xls
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=XLS
        - GDAL_PLUGIN_TYPE=ogr
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_FREEXL=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - freexl
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Vector driver XLS for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-fits
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=FITS
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_CFITSIO=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - cfitsio
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver FITS for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-grib
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=GRIB
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_LIBAEC=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - libaec
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver GRIB for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-kea
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=KEA
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_KEA=ON -DGDAL_USE_HDF5=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - {{ pin_subpackage('libgdal-hdf5', exact=True) }}
        - libkml-devel
        - expat
        - kealib
        - hdf5
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
        - libgdal-hdf5 {{ version }}.*
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver KEA for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-tiledb
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=TileDB
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_TILEDB=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - tiledb
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver TileDB for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-netcdf
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=netCDF
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_NETCDF=ON -DGDAL_USE_HDF5=ON -DGDAL_USE_HDF4=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - {{ pin_subpackage('libgdal-hdf5', exact=True) }}
        - {{ pin_subpackage('libgdal-hdf4', exact=True) }}
        - hdf5
        - hdf4
        - libkml-devel
        - expat
        - libnetcdf
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
        - libgdal-hdf5 {{ version }}.*
        - libgdal-hdf4 {{ version }}.*
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver netCDF for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-hdf5
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=HDF5
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_HDF5=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - hdf5
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver HDF5 for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-hdf4
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=HDF4
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_HDF4=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - expat
        - hdf4
        - libaec
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver HDF4 for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal
    build:
      run_exports:
        # no idea, going with minor pin
        - {{ pin_subpackage('libgdal-core', max_pin='x.x') }}
        - {{ pin_subpackage('libgdal', max_pin='x.x') }}
    requirements:
      run:
        - libgdal-core {{ version }}.*
        - libgdal-jp2openjpeg {{ version }}.*
        - libgdal-pdf {{ version }}.*
        - libgdal-postgisraster {{ version }}.*
        - libgdal-pg {{ version }}.*
        - libgdal-fits {{ version }}.*
        - libgdal-xls {{ version }}.*
        - libgdal-grib {{ version }}.*
        - libgdal-kea {{ version }}.*
        - libgdal-tiledb {{ version }}.*
        - libgdal-netcdf {{ version }}.*
        - libgdal-hdf5 {{ version }}.*
        - libgdal-hdf4 {{ version }}.*

  - name: gdal
    script: install_python.sh  # [unix]
    script: install_python.bat  # [win]
    build:
      skip_compile_pyc:
        - share/bash-completion/completions/*.py
      ignore_run_exports_from:
        - expat
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - cmake
        - make  # [unix]
        - ninja  # [win]
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - swig
      host:
        - python
        - pip
        - numpy
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - libxml2
        - expat
        - setuptools
      run:
        - python
        - libgdal-core {{ version }}.*
    test:
      files:
        - test_data
        - extra_tests.py
        - test_python.py
        - test_script_exist.bat
      requires:
        - libgdal
      imports:
        - osgeo
        - osgeo.ogr
        - osgeo.gdal
        - osgeo._gdal
        - osgeo._gdalconst
        - osgeo._ogr
        - osgeo._osr
      commands:
        - python test_python.py
        # Check that Python-implemented GDAL utilities are available with .py extension, as documented
        - gdal2tiles.py --help
        - gdal2xyz.py --help
        - gdal_calc.py --help
        - gdal_edit.py --help
        - gdal_fillnodata.py --help
        - gdal_merge.py --help
        - gdal_pansharpen.py --help
        - gdal_polygonize.py --help
        - gdal_proximity.py --help
        - gdal_retile.py --help
        - gdal_sieve.py --help
        - gdalattachpct.py --help
        - gdalcompare.py --help
        - gdalmove.py --help
        - pct2rgb.py --help
        - rgb2pct.py --help
        - ogrmerge.py --help
        - ogr_layer_algebra.py --help
        # Check that the utilities are available as entry points without extension, see:
        # https://github.com/conda-forge/gdal-feedstock/issues/834
        # https://github.com/OSGeo/gdal/pull/8718
        # https://github.com/OSGeo/gdal/issues/8811
        - gdal2tiles --help
        - gdal2xyz --help
        - gdal_calc --help
        - gdal_edit --help
        - gdal_fillnodata --help
        - gdal_merge --help
        - gdal_pansharpen --help
        - gdal_polygonize --help
        - gdal_proximity --help
        - gdal_retile --help
        - gdal_sieve --help
        - gdalattachpct --help
        - gdalcompare --help
        - gdalmove --help
        - pct2rgb --help
        - rgb2pct --help
        - ogrmerge --help
        - ogr_layer_algebra --help
      about:
        summary: Python wrapper for the Geospatial Data Abstraction Library (GDAL)
        license: MIT
        license_file: LICENSE.TXT

  - name: libgdal-avif
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=AVIF
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_AVIF=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - libavif
        - expat
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver AVIF for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

  - name: libgdal-heif
    script: build_plugin.sh  # [unix]
    script: build_plugin.bat  # [win]
    build:
      ignore_run_exports_from:
        - expat
      script_env:
        - GDAL_PLUGIN_NAME=HEIF
        - GDAL_PLUGIN_TYPE=gdal
        - GDAL_PLUGIN_DEPS=-DGDAL_USE_HEIF=ON
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pkg-config  # [not win]
        - make  # [unix]
        - ninja  # [win]
      host:
        - {{ pin_subpackage('libgdal-core', exact=True) }}
        - libkml-devel
        - libheif
        - expat
      run:
        - libgdal-core >={{ ".".join(version.split(".")[:2]) }}
    test:
      commands:
        - test -f ${PREFIX}/lib/gdalplugins/${GDAL_PLUGIN_TYPE}_${GDAL_PLUGIN_NAME}${SHLIB_EXT}      # [unix]
        - if not exist %LIBRARY_LIB%\gdalplugins\%GDAL_PLUGIN_TYPE%_%GDAL_PLUGIN_NAME%.dll exit 1    # [win]
        - gdalinfo --format ${GDAL_PLUGIN_NAME}  # [unix]
        - gdalinfo --format %GDAL_PLUGIN_NAME%   # [win]
    about:
      summary: Raster driver HEIF for the Geospatial Data Abstraction Library (GDAL)
      license: MIT
      license_file: LICENSE.TXT

about:
  home: http://www.gdal.org
  license: MIT
  license_file: LICENSE.TXT
  summary: |
    GDAL is a translator library for raster and vector geospatial data formats that is released under an
    X/MIT style Open Source license by the Open Source Geospatial Foundation.

extra:
  feedstock-name: gdal
  recipe-maintainers:
    - zklaus
    - akrherz
    - gillins
    - kmuehlbauer
    - mingwandroid
    - msarahan
    - ocefpaf
    - xylar
